{"v":"5.11.0","fr":30,"ip":0,"op":77,"w":240,"h":240,"nm":"Connecting v2","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.952},"o":{"x":0.333,"y":0},"t":0,"s":[120,120,0],"to":[1.083,2.25,0],"ti":[0.5,-2.5,0]},{"i":{"x":0.833,"y":0.698},"o":{"x":0.167,"y":0.334},"t":10,"s":[126.5,133.5,0],"to":[-0.5,2.5,0],"ti":[1.083,2.25,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.072},"t":60,"s":[117,135,0],"to":[-1.083,-2.25,0],"ti":[-0.5,2.5,0]},{"t":77,"s":[120,120,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-11.75,-20.25,0],"ix":1,"l":2},"s":{"a":0,"k":[140,140,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[19.5,19.5],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.976470589638,0.270588248968,0.360784322023,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-11.75,-20.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[135.135,135.135],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Shape Layer 6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.962},"o":{"x":0.333,"y":0},"t":0,"s":[120,120,0],"to":[2.5,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.536},"o":{"x":0.167,"y":0.502},"t":10,"s":[213.5,146,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.04},"t":60,"s":[188.5,173.5,0],"to":[0,0,0],"ti":[-2.5,0,0]},{"t":70,"s":[120,120,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-11.75,-20.25,0],"ix":1,"l":2},"s":{"a":0,"k":[50.667,50.667,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[19.5,19.5],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.698039233685,0.101960785687,0.180392161012,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-11.75,-20.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[135.135,135.135],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Line 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\ntry {\n    if (!effect('3D')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        var rot = radiansToDegrees(Math.atan2($bm_sub(pointF[1], pointT[1]), $bm_mul($bm_sub(pointF[0], pointT[0]), pixelAspect)));\n        $bm_rt = $bm_sub(rot, 180);\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = 0;\n}"},"p":{"a":0,"k":[120,120,0],"ix":2,"l":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    $bm_rt = layerF.toWorld(layerF.anchorPoint);\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0,\n        0\n    ];\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"From","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"To","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":2,"ix":1}}]},{"ty":5,"nm":"Trim Start","np":3,"mn":"ADBE Slider Control","ix":3,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Trim End","np":3,"mn":"ADBE Slider Control","ix":4,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":100,"ix":1}}]},{"ty":5,"nm":"Trim Offset","np":3,"mn":"ADBE Angle Control","ix":5,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"3D","np":3,"mn":"ADBE Checkbox Control","ix":6,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Z Orientation","np":3,"mn":"ADBE Angle Control","ix":7,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Straight Line Mode","np":3,"mn":"ADBE Checkbox Control","ix":8,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":true,"ix":1}}]},{"ty":5,"nm":"Rect Height","np":3,"mn":"ADBE Slider Control","ix":9,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner Roundness","np":3,"mn":"ADBE Slider Control","ix":10,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Arc Mode","np":3,"mn":"ADBE Checkbox Control","ix":11,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Reverse","np":3,"mn":"ADBE Checkbox Control","ix":12,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Size","np":3,"mn":"ADBE Slider Control","ix":13,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Square Mode","np":3,"mn":"ADBE Checkbox Control","ix":14,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Horizontal","np":3,"mn":"ADBE Checkbox Control","ix":15,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"Corner Proportion","np":3,"mn":"ADBE Slider Control","ix":16,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":50,"ix":1}}]},{"ty":5,"nm":"Corner 1 Lock","np":3,"mn":"ADBE Slider Control","ix":17,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Lock","np":3,"mn":"ADBE Slider Control","ix":18,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 1 Roundness","np":3,"mn":"ADBE Slider Control","ix":19,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Roundness","np":3,"mn":"ADBE Slider Control","ix":20,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[100,100],"ix":2,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointC = toWorld(content('Line 1').transform.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointC[2] = 0;\n        var r = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointC[0], pixelAspect),\n            pointC[1],\n            pointC[2]\n        ]);\n        var h = $bm_mul(r, 2);\n        var w = h;\n    } else {\n        w = h = 0;\n    }\n    $bm_rt = [\n        w,\n        h\n    ];\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[100,0],"ix":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    var layerT = effect('To')(1);\n    var pointF = layerF.toWorld(layerF.anchorPoint);\n    var pointT = layerT.toWorld(layerT.anchorPoint);\n    var pixelAspect = thisComp.pixelAspect;\n    var squareMode = effect('---- Square Mode')(1).value;\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var threeDMode = effect('3D')(1).value;\n    if (squareMode) {\n        var distanceH = Math.abs($bm_sub(pointF[1], pointT[1]));\n        var distanceW = threeDMode ? length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[2]\n        ]) : $bm_mul(Math.abs($bm_sub(pointF[0], pointT[0])), pixelAspect);\n        if (!effect('Horizontal')(1).value) {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceW);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceW);\n            if (lengthLine2) {\n                distanceW = $bm_sub(distanceW, lengthLine2);\n            } else if (lengthLine1) {\n                distanceW = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceW = $bm_mul($bm_div(distanceW, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceW = $bm_sum(distanceW, Math.min(distanceW, $bm_div(distanceH, 2), content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceH,\n                distanceW\n            ];\n        } else {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceH);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceH);\n            if (lengthLine2) {\n                distanceH = $bm_sub(distanceH, lengthLine2);\n            } else if (lengthLine1) {\n                distanceH = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceH = $bm_mul($bm_div(distanceH, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceH = $bm_sum(distanceH, Math.min($bm_div(distanceW, 2), distanceH, content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceW,\n                distanceH\n            ];\n        }\n    } else if (arcMode) {\n        $bm_rt = [\n            0,\n            0\n        ];\n    } else {\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var rectHeight;\n        try {\n            rectHeight = effect('Rect Height')(1).value;\n        } catch ($e) {\n            rectHeight = value[1];\n        }\n        $bm_rt = [\n            distance,\n            Math.max(0.001, rectHeight)\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = effect('Corner Roundness')(1).value;\n    } else {\n        $bm_rt = effect('Corner 1 Roundness')(1).value;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"nm":"Rect 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        if (!effect('Reverse')(1).value) {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_div(180, Math.PI), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        } else {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').end);\n        }\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"e":{"a":0,"k":100,"ix":2,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        var r = Math.min($bm_div(size[0], 2), $bm_div(size[1], 2), content('Line 1').content('Rect 1').roundness);\n        var P = $bm_sum($bm_mul(2, $bm_sub($bm_sum(size[0], size[1]), $bm_mul(4, r))), $bm_mul(4, $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)));\n        $bm_rt = $bm_mul($bm_div($bm_sum($bm_sub($bm_sum(size[1], $bm_div(size[0], 2)), $bm_mul(3, r)), $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)), P), 100);\n    } else if (arcMode) {\n        if (!effect('Reverse')(1).value) {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').start);\n        } else {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_neg($bm_div(180, Math.PI)), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        }\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        if (size[1] > 0.001) {\n            $bm_rt = 100;\n        } else {\n            $bm_rt = 49.99;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value && effect('---- Arc Mode')(1).value && effect('Reverse')(1).value) {\n        $bm_rt = -180.001;\n    } else {\n        $bm_rt = 0.001;\n    }\n} catch ($e) {\n}"},"m":1,"ix":3,"nm":"Trim 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            -size[1] / 2 + Math.min(size[0] / 2, size[1] / 2, content('Line 1').content('Rect 1').roundness)\n        ];\n    } else if (arcMode) {\n        var reverse = effect('Reverse')(1).value ? -1 : 1;\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var arcH = Math.min(3000, Math.max(-3000, effect('Size')(1)));\n        var arcHQ = $bm_div($bm_neg(arcH), 100);\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var r = $bm_div(distance, 2);\n        $bm_rt = [\n            r,\n            reverse * r * arcHQ\n        ];\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            0\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = [\n            100,\n            100\n        ];\n    } else {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var distanceW = $bm_sub(pointF[1], pointT[1]);\n        var distanceH = $bm_sub(pointF[0], pointT[0]);\n        var distanceD = 1;\n        if (typeof pointF[2] != 'undefined') {\n            $bm_rt = distanceD = $bm_neg($bm_sub(pointF[0], pointT[0]));\n        }\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = [\n                distanceW < 0 ? 100 : -100,\n                distanceD * distanceH < 0 ? 100 : -100\n            ];\n        } else {\n            $bm_rt = [\n                distanceD * distanceH < 0 ? 100 : -100,\n                distanceW < 0 ? -100 : 100\n            ];\n        }\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        100\n    ];\n}"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\ntry {\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (!squareMode) {\n        $bm_rt = 180;\n    } else {\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = -90;\n        } else {\n            $bm_rt = 180;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Line 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.698039233685,0.101960785687,0.180392161012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Line Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Shape Layer 7","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.958},"o":{"x":0.333,"y":0},"t":0,"s":[120,120,0],"to":[-11.333,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.569},"o":{"x":0.167,"y":0.407},"t":10,"s":[99.5,65.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.041},"t":60,"s":[129.5,57.5,0],"to":[0,0,0],"ti":[11.333,0,0]},{"t":70,"s":[120,120,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-11.75,-20.25,0],"ix":1,"l":2},"s":{"a":0,"k":[50.667,50.667,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[19.5,19.5],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.874509811401,0.1254902035,0.223529413342,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-11.75,-20.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[135.135,135.135],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Line 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\ntry {\n    if (!effect('3D')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        var rot = radiansToDegrees(Math.atan2($bm_sub(pointF[1], pointT[1]), $bm_mul($bm_sub(pointF[0], pointT[0]), pixelAspect)));\n        $bm_rt = $bm_sub(rot, 180);\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = 0;\n}"},"p":{"a":0,"k":[120,120,0],"ix":2,"l":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    $bm_rt = layerF.toWorld(layerF.anchorPoint);\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0,\n        0\n    ];\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"From","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"To","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":4,"ix":1}}]},{"ty":5,"nm":"Trim Start","np":3,"mn":"ADBE Slider Control","ix":3,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Trim End","np":3,"mn":"ADBE Slider Control","ix":4,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":100,"ix":1}}]},{"ty":5,"nm":"Trim Offset","np":3,"mn":"ADBE Angle Control","ix":5,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"3D","np":3,"mn":"ADBE Checkbox Control","ix":6,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Z Orientation","np":3,"mn":"ADBE Angle Control","ix":7,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Straight Line Mode","np":3,"mn":"ADBE Checkbox Control","ix":8,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":true,"ix":1}}]},{"ty":5,"nm":"Rect Height","np":3,"mn":"ADBE Slider Control","ix":9,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner Roundness","np":3,"mn":"ADBE Slider Control","ix":10,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Arc Mode","np":3,"mn":"ADBE Checkbox Control","ix":11,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Reverse","np":3,"mn":"ADBE Checkbox Control","ix":12,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Size","np":3,"mn":"ADBE Slider Control","ix":13,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Square Mode","np":3,"mn":"ADBE Checkbox Control","ix":14,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Horizontal","np":3,"mn":"ADBE Checkbox Control","ix":15,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"Corner Proportion","np":3,"mn":"ADBE Slider Control","ix":16,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":50,"ix":1}}]},{"ty":5,"nm":"Corner 1 Lock","np":3,"mn":"ADBE Slider Control","ix":17,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Lock","np":3,"mn":"ADBE Slider Control","ix":18,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 1 Roundness","np":3,"mn":"ADBE Slider Control","ix":19,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Roundness","np":3,"mn":"ADBE Slider Control","ix":20,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[100,100],"ix":2,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointC = toWorld(content('Line 1').transform.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointC[2] = 0;\n        var r = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointC[0], pixelAspect),\n            pointC[1],\n            pointC[2]\n        ]);\n        var h = $bm_mul(r, 2);\n        var w = h;\n    } else {\n        w = h = 0;\n    }\n    $bm_rt = [\n        w,\n        h\n    ];\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[100,0],"ix":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    var layerT = effect('To')(1);\n    var pointF = layerF.toWorld(layerF.anchorPoint);\n    var pointT = layerT.toWorld(layerT.anchorPoint);\n    var pixelAspect = thisComp.pixelAspect;\n    var squareMode = effect('---- Square Mode')(1).value;\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var threeDMode = effect('3D')(1).value;\n    if (squareMode) {\n        var distanceH = Math.abs($bm_sub(pointF[1], pointT[1]));\n        var distanceW = threeDMode ? length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[2]\n        ]) : $bm_mul(Math.abs($bm_sub(pointF[0], pointT[0])), pixelAspect);\n        if (!effect('Horizontal')(1).value) {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceW);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceW);\n            if (lengthLine2) {\n                distanceW = $bm_sub(distanceW, lengthLine2);\n            } else if (lengthLine1) {\n                distanceW = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceW = $bm_mul($bm_div(distanceW, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceW = $bm_sum(distanceW, Math.min(distanceW, $bm_div(distanceH, 2), content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceH,\n                distanceW\n            ];\n        } else {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceH);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceH);\n            if (lengthLine2) {\n                distanceH = $bm_sub(distanceH, lengthLine2);\n            } else if (lengthLine1) {\n                distanceH = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceH = $bm_mul($bm_div(distanceH, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceH = $bm_sum(distanceH, Math.min($bm_div(distanceW, 2), distanceH, content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceW,\n                distanceH\n            ];\n        }\n    } else if (arcMode) {\n        $bm_rt = [\n            0,\n            0\n        ];\n    } else {\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var rectHeight;\n        try {\n            rectHeight = effect('Rect Height')(1).value;\n        } catch ($e) {\n            rectHeight = value[1];\n        }\n        $bm_rt = [\n            distance,\n            Math.max(0.001, rectHeight)\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = effect('Corner Roundness')(1).value;\n    } else {\n        $bm_rt = effect('Corner 1 Roundness')(1).value;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"nm":"Rect 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        if (!effect('Reverse')(1).value) {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_div(180, Math.PI), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        } else {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').end);\n        }\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"e":{"a":0,"k":100,"ix":2,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        var r = Math.min($bm_div(size[0], 2), $bm_div(size[1], 2), content('Line 1').content('Rect 1').roundness);\n        var P = $bm_sum($bm_mul(2, $bm_sub($bm_sum(size[0], size[1]), $bm_mul(4, r))), $bm_mul(4, $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)));\n        $bm_rt = $bm_mul($bm_div($bm_sum($bm_sub($bm_sum(size[1], $bm_div(size[0], 2)), $bm_mul(3, r)), $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)), P), 100);\n    } else if (arcMode) {\n        if (!effect('Reverse')(1).value) {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').start);\n        } else {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_neg($bm_div(180, Math.PI)), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        }\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        if (size[1] > 0.001) {\n            $bm_rt = 100;\n        } else {\n            $bm_rt = 49.99;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value && effect('---- Arc Mode')(1).value && effect('Reverse')(1).value) {\n        $bm_rt = -180.001;\n    } else {\n        $bm_rt = 0.001;\n    }\n} catch ($e) {\n}"},"m":1,"ix":3,"nm":"Trim 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            -size[1] / 2 + Math.min(size[0] / 2, size[1] / 2, content('Line 1').content('Rect 1').roundness)\n        ];\n    } else if (arcMode) {\n        var reverse = effect('Reverse')(1).value ? -1 : 1;\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var arcH = Math.min(3000, Math.max(-3000, effect('Size')(1)));\n        var arcHQ = $bm_div($bm_neg(arcH), 100);\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var r = $bm_div(distance, 2);\n        $bm_rt = [\n            r,\n            reverse * r * arcHQ\n        ];\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            0\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = [\n            100,\n            100\n        ];\n    } else {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var distanceW = $bm_sub(pointF[1], pointT[1]);\n        var distanceH = $bm_sub(pointF[0], pointT[0]);\n        var distanceD = 1;\n        if (typeof pointF[2] != 'undefined') {\n            $bm_rt = distanceD = $bm_neg($bm_sub(pointF[0], pointT[0]));\n        }\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = [\n                distanceW < 0 ? 100 : -100,\n                distanceD * distanceH < 0 ? 100 : -100\n            ];\n        } else {\n            $bm_rt = [\n                distanceD * distanceH < 0 ? 100 : -100,\n                distanceW < 0 ? -100 : 100\n            ];\n        }\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        100\n    ];\n}"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\ntry {\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (!squareMode) {\n        $bm_rt = 180;\n    } else {\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = -90;\n        } else {\n            $bm_rt = 180;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Line 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.874509811401,0.1254902035,0.223529413342,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Line Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Shape Layer 5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.961},"o":{"x":0.333,"y":0},"t":2,"s":[120,120,0],"to":[9.833,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.533},"o":{"x":0.167,"y":0.495},"t":12,"s":[67,176,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.04},"t":62,"s":[53,148.5,0],"to":[0,0,0],"ti":[-9.833,0,0]},{"t":72,"s":[120,120,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-11.75,-20.25,0],"ix":1,"l":2},"s":{"a":0,"k":[50.667,50.667,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[19.5,19.5],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.976470589638,0.270588248968,0.360784322023,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-11.75,-20.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[135.135,135.135],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":2,"op":79,"st":2,"ct":1,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Line 5","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\ntry {\n    if (!effect('3D')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        var rot = radiansToDegrees(Math.atan2($bm_sub(pointF[1], pointT[1]), $bm_mul($bm_sub(pointF[0], pointT[0]), pixelAspect)));\n        $bm_rt = $bm_sub(rot, 180);\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = 0;\n}"},"p":{"a":0,"k":[120,120,0],"ix":2,"l":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    $bm_rt = layerF.toWorld(layerF.anchorPoint);\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0,\n        0\n    ];\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"From","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"To","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":6,"ix":1}}]},{"ty":5,"nm":"Trim Start","np":3,"mn":"ADBE Slider Control","ix":3,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Trim End","np":3,"mn":"ADBE Slider Control","ix":4,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":100,"ix":1}}]},{"ty":5,"nm":"Trim Offset","np":3,"mn":"ADBE Angle Control","ix":5,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"3D","np":3,"mn":"ADBE Checkbox Control","ix":6,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Z Orientation","np":3,"mn":"ADBE Angle Control","ix":7,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Straight Line Mode","np":3,"mn":"ADBE Checkbox Control","ix":8,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":true,"ix":1}}]},{"ty":5,"nm":"Rect Height","np":3,"mn":"ADBE Slider Control","ix":9,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner Roundness","np":3,"mn":"ADBE Slider Control","ix":10,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Arc Mode","np":3,"mn":"ADBE Checkbox Control","ix":11,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Reverse","np":3,"mn":"ADBE Checkbox Control","ix":12,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Size","np":3,"mn":"ADBE Slider Control","ix":13,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Square Mode","np":3,"mn":"ADBE Checkbox Control","ix":14,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Horizontal","np":3,"mn":"ADBE Checkbox Control","ix":15,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"Corner Proportion","np":3,"mn":"ADBE Slider Control","ix":16,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":50,"ix":1}}]},{"ty":5,"nm":"Corner 1 Lock","np":3,"mn":"ADBE Slider Control","ix":17,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Lock","np":3,"mn":"ADBE Slider Control","ix":18,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 1 Roundness","np":3,"mn":"ADBE Slider Control","ix":19,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Roundness","np":3,"mn":"ADBE Slider Control","ix":20,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[100,100],"ix":2,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointC = toWorld(content('Line 1').transform.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointC[2] = 0;\n        var r = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointC[0], pixelAspect),\n            pointC[1],\n            pointC[2]\n        ]);\n        var h = $bm_mul(r, 2);\n        var w = h;\n    } else {\n        w = h = 0;\n    }\n    $bm_rt = [\n        w,\n        h\n    ];\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[100,0],"ix":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    var layerT = effect('To')(1);\n    var pointF = layerF.toWorld(layerF.anchorPoint);\n    var pointT = layerT.toWorld(layerT.anchorPoint);\n    var pixelAspect = thisComp.pixelAspect;\n    var squareMode = effect('---- Square Mode')(1).value;\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var threeDMode = effect('3D')(1).value;\n    if (squareMode) {\n        var distanceH = Math.abs($bm_sub(pointF[1], pointT[1]));\n        var distanceW = threeDMode ? length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[2]\n        ]) : $bm_mul(Math.abs($bm_sub(pointF[0], pointT[0])), pixelAspect);\n        if (!effect('Horizontal')(1).value) {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceW);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceW);\n            if (lengthLine2) {\n                distanceW = $bm_sub(distanceW, lengthLine2);\n            } else if (lengthLine1) {\n                distanceW = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceW = $bm_mul($bm_div(distanceW, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceW = $bm_sum(distanceW, Math.min(distanceW, $bm_div(distanceH, 2), content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceH,\n                distanceW\n            ];\n        } else {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceH);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceH);\n            if (lengthLine2) {\n                distanceH = $bm_sub(distanceH, lengthLine2);\n            } else if (lengthLine1) {\n                distanceH = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceH = $bm_mul($bm_div(distanceH, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceH = $bm_sum(distanceH, Math.min($bm_div(distanceW, 2), distanceH, content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceW,\n                distanceH\n            ];\n        }\n    } else if (arcMode) {\n        $bm_rt = [\n            0,\n            0\n        ];\n    } else {\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var rectHeight;\n        try {\n            rectHeight = effect('Rect Height')(1).value;\n        } catch ($e) {\n            rectHeight = value[1];\n        }\n        $bm_rt = [\n            distance,\n            Math.max(0.001, rectHeight)\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = effect('Corner Roundness')(1).value;\n    } else {\n        $bm_rt = effect('Corner 1 Roundness')(1).value;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"nm":"Rect 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        if (!effect('Reverse')(1).value) {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_div(180, Math.PI), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        } else {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').end);\n        }\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"e":{"a":0,"k":100,"ix":2,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        var r = Math.min($bm_div(size[0], 2), $bm_div(size[1], 2), content('Line 1').content('Rect 1').roundness);\n        var P = $bm_sum($bm_mul(2, $bm_sub($bm_sum(size[0], size[1]), $bm_mul(4, r))), $bm_mul(4, $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)));\n        $bm_rt = $bm_mul($bm_div($bm_sum($bm_sub($bm_sum(size[1], $bm_div(size[0], 2)), $bm_mul(3, r)), $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)), P), 100);\n    } else if (arcMode) {\n        if (!effect('Reverse')(1).value) {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').start);\n        } else {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_neg($bm_div(180, Math.PI)), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        }\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        if (size[1] > 0.001) {\n            $bm_rt = 100;\n        } else {\n            $bm_rt = 49.99;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value && effect('---- Arc Mode')(1).value && effect('Reverse')(1).value) {\n        $bm_rt = -180.001;\n    } else {\n        $bm_rt = 0.001;\n    }\n} catch ($e) {\n}"},"m":1,"ix":3,"nm":"Trim 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            -size[1] / 2 + Math.min(size[0] / 2, size[1] / 2, content('Line 1').content('Rect 1').roundness)\n        ];\n    } else if (arcMode) {\n        var reverse = effect('Reverse')(1).value ? -1 : 1;\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var arcH = Math.min(3000, Math.max(-3000, effect('Size')(1)));\n        var arcHQ = $bm_div($bm_neg(arcH), 100);\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var r = $bm_div(distance, 2);\n        $bm_rt = [\n            r,\n            reverse * r * arcHQ\n        ];\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            0\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = [\n            100,\n            100\n        ];\n    } else {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var distanceW = $bm_sub(pointF[1], pointT[1]);\n        var distanceH = $bm_sub(pointF[0], pointT[0]);\n        var distanceD = 1;\n        if (typeof pointF[2] != 'undefined') {\n            $bm_rt = distanceD = $bm_neg($bm_sub(pointF[0], pointT[0]));\n        }\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = [\n                distanceW < 0 ? 100 : -100,\n                distanceD * distanceH < 0 ? 100 : -100\n            ];\n        } else {\n            $bm_rt = [\n                distanceD * distanceH < 0 ? 100 : -100,\n                distanceW < 0 ? -100 : 100\n            ];\n        }\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        100\n    ];\n}"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\ntry {\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (!squareMode) {\n        $bm_rt = 180;\n    } else {\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = -90;\n        } else {\n            $bm_rt = 180;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Line 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.976470589638,0.270588248968,0.360784322023,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":1,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Line Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Shape Layer 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.962},"o":{"x":0.333,"y":0},"t":4,"s":[120,120,0],"to":[-2.5,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.534},"o":{"x":0.167,"y":0.521},"t":14,"s":[47.5,115.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.04},"t":64,"s":[63.5,94.5,0],"to":[0,0,0],"ti":[2.5,0,0]},{"t":74,"s":[120,120,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-11.75,-20.25,0],"ix":1,"l":2},"s":{"a":0,"k":[80,80,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[19.5,19.5],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.698039233685,0.101960785687,0.180392161012,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-11.75,-20.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[135.135,135.135],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":4,"op":81,"st":4,"ct":1,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Line 4","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\ntry {\n    if (!effect('3D')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        var rot = radiansToDegrees(Math.atan2($bm_sub(pointF[1], pointT[1]), $bm_mul($bm_sub(pointF[0], pointT[0]), pixelAspect)));\n        $bm_rt = $bm_sub(rot, 180);\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = 0;\n}"},"p":{"a":0,"k":[120,120,0],"ix":2,"l":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    $bm_rt = layerF.toWorld(layerF.anchorPoint);\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0,\n        0\n    ];\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"From","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"To","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":8,"ix":1}}]},{"ty":5,"nm":"Trim Start","np":3,"mn":"ADBE Slider Control","ix":3,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Trim End","np":3,"mn":"ADBE Slider Control","ix":4,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":100,"ix":1}}]},{"ty":5,"nm":"Trim Offset","np":3,"mn":"ADBE Angle Control","ix":5,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"3D","np":3,"mn":"ADBE Checkbox Control","ix":6,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Z Orientation","np":3,"mn":"ADBE Angle Control","ix":7,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Straight Line Mode","np":3,"mn":"ADBE Checkbox Control","ix":8,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":true,"ix":1}}]},{"ty":5,"nm":"Rect Height","np":3,"mn":"ADBE Slider Control","ix":9,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner Roundness","np":3,"mn":"ADBE Slider Control","ix":10,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Arc Mode","np":3,"mn":"ADBE Checkbox Control","ix":11,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Reverse","np":3,"mn":"ADBE Checkbox Control","ix":12,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Size","np":3,"mn":"ADBE Slider Control","ix":13,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Square Mode","np":3,"mn":"ADBE Checkbox Control","ix":14,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Horizontal","np":3,"mn":"ADBE Checkbox Control","ix":15,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"Corner Proportion","np":3,"mn":"ADBE Slider Control","ix":16,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":50,"ix":1}}]},{"ty":5,"nm":"Corner 1 Lock","np":3,"mn":"ADBE Slider Control","ix":17,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Lock","np":3,"mn":"ADBE Slider Control","ix":18,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 1 Roundness","np":3,"mn":"ADBE Slider Control","ix":19,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Roundness","np":3,"mn":"ADBE Slider Control","ix":20,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[100,100],"ix":2,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointC = toWorld(content('Line 1').transform.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointC[2] = 0;\n        var r = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointC[0], pixelAspect),\n            pointC[1],\n            pointC[2]\n        ]);\n        var h = $bm_mul(r, 2);\n        var w = h;\n    } else {\n        w = h = 0;\n    }\n    $bm_rt = [\n        w,\n        h\n    ];\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[100,0],"ix":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    var layerT = effect('To')(1);\n    var pointF = layerF.toWorld(layerF.anchorPoint);\n    var pointT = layerT.toWorld(layerT.anchorPoint);\n    var pixelAspect = thisComp.pixelAspect;\n    var squareMode = effect('---- Square Mode')(1).value;\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var threeDMode = effect('3D')(1).value;\n    if (squareMode) {\n        var distanceH = Math.abs($bm_sub(pointF[1], pointT[1]));\n        var distanceW = threeDMode ? length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[2]\n        ]) : $bm_mul(Math.abs($bm_sub(pointF[0], pointT[0])), pixelAspect);\n        if (!effect('Horizontal')(1).value) {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceW);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceW);\n            if (lengthLine2) {\n                distanceW = $bm_sub(distanceW, lengthLine2);\n            } else if (lengthLine1) {\n                distanceW = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceW = $bm_mul($bm_div(distanceW, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceW = $bm_sum(distanceW, Math.min(distanceW, $bm_div(distanceH, 2), content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceH,\n                distanceW\n            ];\n        } else {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceH);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceH);\n            if (lengthLine2) {\n                distanceH = $bm_sub(distanceH, lengthLine2);\n            } else if (lengthLine1) {\n                distanceH = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceH = $bm_mul($bm_div(distanceH, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceH = $bm_sum(distanceH, Math.min($bm_div(distanceW, 2), distanceH, content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceW,\n                distanceH\n            ];\n        }\n    } else if (arcMode) {\n        $bm_rt = [\n            0,\n            0\n        ];\n    } else {\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var rectHeight;\n        try {\n            rectHeight = effect('Rect Height')(1).value;\n        } catch ($e) {\n            rectHeight = value[1];\n        }\n        $bm_rt = [\n            distance,\n            Math.max(0.001, rectHeight)\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = effect('Corner Roundness')(1).value;\n    } else {\n        $bm_rt = effect('Corner 1 Roundness')(1).value;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"nm":"Rect 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        if (!effect('Reverse')(1).value) {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_div(180, Math.PI), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        } else {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').end);\n        }\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"e":{"a":0,"k":100,"ix":2,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        var r = Math.min($bm_div(size[0], 2), $bm_div(size[1], 2), content('Line 1').content('Rect 1').roundness);\n        var P = $bm_sum($bm_mul(2, $bm_sub($bm_sum(size[0], size[1]), $bm_mul(4, r))), $bm_mul(4, $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)));\n        $bm_rt = $bm_mul($bm_div($bm_sum($bm_sub($bm_sum(size[1], $bm_div(size[0], 2)), $bm_mul(3, r)), $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)), P), 100);\n    } else if (arcMode) {\n        if (!effect('Reverse')(1).value) {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').start);\n        } else {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_neg($bm_div(180, Math.PI)), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        }\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        if (size[1] > 0.001) {\n            $bm_rt = 100;\n        } else {\n            $bm_rt = 49.99;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value && effect('---- Arc Mode')(1).value && effect('Reverse')(1).value) {\n        $bm_rt = -180.001;\n    } else {\n        $bm_rt = 0.001;\n    }\n} catch ($e) {\n}"},"m":1,"ix":3,"nm":"Trim 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            -size[1] / 2 + Math.min(size[0] / 2, size[1] / 2, content('Line 1').content('Rect 1').roundness)\n        ];\n    } else if (arcMode) {\n        var reverse = effect('Reverse')(1).value ? -1 : 1;\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var arcH = Math.min(3000, Math.max(-3000, effect('Size')(1)));\n        var arcHQ = $bm_div($bm_neg(arcH), 100);\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var r = $bm_div(distance, 2);\n        $bm_rt = [\n            r,\n            reverse * r * arcHQ\n        ];\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            0\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = [\n            100,\n            100\n        ];\n    } else {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var distanceW = $bm_sub(pointF[1], pointT[1]);\n        var distanceH = $bm_sub(pointF[0], pointT[0]);\n        var distanceD = 1;\n        if (typeof pointF[2] != 'undefined') {\n            $bm_rt = distanceD = $bm_neg($bm_sub(pointF[0], pointT[0]));\n        }\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = [\n                distanceW < 0 ? 100 : -100,\n                distanceD * distanceH < 0 ? 100 : -100\n            ];\n        } else {\n            $bm_rt = [\n                distanceD * distanceH < 0 ? 100 : -100,\n                distanceW < 0 ? -100 : 100\n            ];\n        }\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        100\n    ];\n}"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\ntry {\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (!squareMode) {\n        $bm_rt = 180;\n    } else {\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = -90;\n        } else {\n            $bm_rt = 180;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Line 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.698039233685,0.101960785687,0.180392161012,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Line Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Shape Layer 3","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.965},"o":{"x":0.333,"y":0},"t":1,"s":[120,120,0],"to":[12.5,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.253},"o":{"x":0.167,"y":0.708},"t":11,"s":[134,197,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.034},"t":61,"s":[115.5,203.5,0],"to":[0,0,0],"ti":[-12.5,0,0]},{"t":71,"s":[120,120,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-11.75,-20.25,0],"ix":1,"l":2},"s":{"a":0,"k":[80,80,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[19.5,19.5],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.874509811401,0.1254902035,0.223529413342,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-11.75,-20.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[135.135,135.135],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":1,"op":78,"st":1,"ct":1,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"Line 6","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\ntry {\n    if (!effect('3D')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        var rot = radiansToDegrees(Math.atan2($bm_sub(pointF[1], pointT[1]), $bm_mul($bm_sub(pointF[0], pointT[0]), pixelAspect)));\n        $bm_rt = $bm_sub(rot, 180);\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = 0;\n}"},"p":{"a":0,"k":[120,120,0],"ix":2,"l":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    $bm_rt = layerF.toWorld(layerF.anchorPoint);\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0,\n        0\n    ];\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"From","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"To","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":10,"ix":1}}]},{"ty":5,"nm":"Trim Start","np":3,"mn":"ADBE Slider Control","ix":3,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Trim End","np":3,"mn":"ADBE Slider Control","ix":4,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":100,"ix":1}}]},{"ty":5,"nm":"Trim Offset","np":3,"mn":"ADBE Angle Control","ix":5,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"3D","np":3,"mn":"ADBE Checkbox Control","ix":6,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Z Orientation","np":3,"mn":"ADBE Angle Control","ix":7,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Straight Line Mode","np":3,"mn":"ADBE Checkbox Control","ix":8,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":true,"ix":1}}]},{"ty":5,"nm":"Rect Height","np":3,"mn":"ADBE Slider Control","ix":9,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner Roundness","np":3,"mn":"ADBE Slider Control","ix":10,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Arc Mode","np":3,"mn":"ADBE Checkbox Control","ix":11,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Reverse","np":3,"mn":"ADBE Checkbox Control","ix":12,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Size","np":3,"mn":"ADBE Slider Control","ix":13,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Square Mode","np":3,"mn":"ADBE Checkbox Control","ix":14,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Horizontal","np":3,"mn":"ADBE Checkbox Control","ix":15,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"Corner Proportion","np":3,"mn":"ADBE Slider Control","ix":16,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":50,"ix":1}}]},{"ty":5,"nm":"Corner 1 Lock","np":3,"mn":"ADBE Slider Control","ix":17,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Lock","np":3,"mn":"ADBE Slider Control","ix":18,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 1 Roundness","np":3,"mn":"ADBE Slider Control","ix":19,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Roundness","np":3,"mn":"ADBE Slider Control","ix":20,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[100,100],"ix":2,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointC = toWorld(content('Line 1').transform.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointC[2] = 0;\n        var r = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointC[0], pixelAspect),\n            pointC[1],\n            pointC[2]\n        ]);\n        var h = $bm_mul(r, 2);\n        var w = h;\n    } else {\n        w = h = 0;\n    }\n    $bm_rt = [\n        w,\n        h\n    ];\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[100,0],"ix":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    var layerT = effect('To')(1);\n    var pointF = layerF.toWorld(layerF.anchorPoint);\n    var pointT = layerT.toWorld(layerT.anchorPoint);\n    var pixelAspect = thisComp.pixelAspect;\n    var squareMode = effect('---- Square Mode')(1).value;\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var threeDMode = effect('3D')(1).value;\n    if (squareMode) {\n        var distanceH = Math.abs($bm_sub(pointF[1], pointT[1]));\n        var distanceW = threeDMode ? length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[2]\n        ]) : $bm_mul(Math.abs($bm_sub(pointF[0], pointT[0])), pixelAspect);\n        if (!effect('Horizontal')(1).value) {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceW);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceW);\n            if (lengthLine2) {\n                distanceW = $bm_sub(distanceW, lengthLine2);\n            } else if (lengthLine1) {\n                distanceW = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceW = $bm_mul($bm_div(distanceW, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceW = $bm_sum(distanceW, Math.min(distanceW, $bm_div(distanceH, 2), content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceH,\n                distanceW\n            ];\n        } else {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceH);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceH);\n            if (lengthLine2) {\n                distanceH = $bm_sub(distanceH, lengthLine2);\n            } else if (lengthLine1) {\n                distanceH = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceH = $bm_mul($bm_div(distanceH, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceH = $bm_sum(distanceH, Math.min($bm_div(distanceW, 2), distanceH, content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceW,\n                distanceH\n            ];\n        }\n    } else if (arcMode) {\n        $bm_rt = [\n            0,\n            0\n        ];\n    } else {\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var rectHeight;\n        try {\n            rectHeight = effect('Rect Height')(1).value;\n        } catch ($e) {\n            rectHeight = value[1];\n        }\n        $bm_rt = [\n            distance,\n            Math.max(0.001, rectHeight)\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = effect('Corner Roundness')(1).value;\n    } else {\n        $bm_rt = effect('Corner 1 Roundness')(1).value;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"nm":"Rect 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        if (!effect('Reverse')(1).value) {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_div(180, Math.PI), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        } else {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').end);\n        }\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"e":{"a":0,"k":100,"ix":2,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        var r = Math.min($bm_div(size[0], 2), $bm_div(size[1], 2), content('Line 1').content('Rect 1').roundness);\n        var P = $bm_sum($bm_mul(2, $bm_sub($bm_sum(size[0], size[1]), $bm_mul(4, r))), $bm_mul(4, $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)));\n        $bm_rt = $bm_mul($bm_div($bm_sum($bm_sub($bm_sum(size[1], $bm_div(size[0], 2)), $bm_mul(3, r)), $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)), P), 100);\n    } else if (arcMode) {\n        if (!effect('Reverse')(1).value) {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').start);\n        } else {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_neg($bm_div(180, Math.PI)), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        }\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        if (size[1] > 0.001) {\n            $bm_rt = 100;\n        } else {\n            $bm_rt = 49.99;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value && effect('---- Arc Mode')(1).value && effect('Reverse')(1).value) {\n        $bm_rt = -180.001;\n    } else {\n        $bm_rt = 0.001;\n    }\n} catch ($e) {\n}"},"m":1,"ix":3,"nm":"Trim 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            -size[1] / 2 + Math.min(size[0] / 2, size[1] / 2, content('Line 1').content('Rect 1').roundness)\n        ];\n    } else if (arcMode) {\n        var reverse = effect('Reverse')(1).value ? -1 : 1;\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var arcH = Math.min(3000, Math.max(-3000, effect('Size')(1)));\n        var arcHQ = $bm_div($bm_neg(arcH), 100);\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var r = $bm_div(distance, 2);\n        $bm_rt = [\n            r,\n            reverse * r * arcHQ\n        ];\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            0\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = [\n            100,\n            100\n        ];\n    } else {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var distanceW = $bm_sub(pointF[1], pointT[1]);\n        var distanceH = $bm_sub(pointF[0], pointT[0]);\n        var distanceD = 1;\n        if (typeof pointF[2] != 'undefined') {\n            $bm_rt = distanceD = $bm_neg($bm_sub(pointF[0], pointT[0]));\n        }\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = [\n                distanceW < 0 ? 100 : -100,\n                distanceD * distanceH < 0 ? 100 : -100\n            ];\n        } else {\n            $bm_rt = [\n                distanceD * distanceH < 0 ? 100 : -100,\n                distanceW < 0 ? -100 : 100\n            ];\n        }\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        100\n    ];\n}"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\ntry {\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (!squareMode) {\n        $bm_rt = 180;\n    } else {\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = -90;\n        } else {\n            $bm_rt = 180;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Line 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.874509811401,0.1254902035,0.223529413342,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Line Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Shape Layer 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.964},"o":{"x":0.333,"y":0},"t":3,"s":[120,120,0],"to":[-11,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.461},"o":{"x":0.167,"y":0.589},"t":13,"s":[182,66.5,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.667,"y":1},"o":{"x":0.167,"y":0.037},"t":63,"s":[189,91.5,0],"to":[0,0,0],"ti":[11,0,0]},{"t":73,"s":[120,120,0]}],"ix":2,"l":2},"a":{"a":0,"k":[-11.75,-20.25,0],"ix":1,"l":2},"s":{"a":0,"k":[80,80,100],"ix":6,"l":2}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[19.5,19.5],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.976470589638,0.270588248968,0.360784322023,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-11.75,-20.25],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[135.135,135.135],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":3,"op":80,"st":3,"ct":1,"bm":0},{"ddd":0,"ind":13,"ty":4,"nm":"Line 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\ntry {\n    if (!effect('3D')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        var rot = radiansToDegrees(Math.atan2($bm_sub(pointF[1], pointT[1]), $bm_mul($bm_sub(pointF[0], pointT[0]), pixelAspect)));\n        $bm_rt = $bm_sub(rot, 180);\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = 0;\n}"},"p":{"a":0,"k":[120,120,0],"ix":2,"l":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    $bm_rt = layerF.toWorld(layerF.anchorPoint);\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0,\n        0\n    ];\n}"},"a":{"a":0,"k":[0,0,0],"ix":1,"l":2},"s":{"a":0,"k":[100,100,100],"ix":6,"l":2}},"ao":0,"ef":[{"ty":5,"nm":"From","np":3,"mn":"ADBE Layer Control","ix":1,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"To","np":3,"mn":"ADBE Layer Control","ix":2,"en":1,"ef":[{"ty":10,"nm":"图层","mn":"ADBE Layer Control-0001","ix":1,"v":{"a":0,"k":12,"ix":1}}]},{"ty":5,"nm":"Trim Start","np":3,"mn":"ADBE Slider Control","ix":3,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Trim End","np":3,"mn":"ADBE Slider Control","ix":4,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":100,"ix":1}}]},{"ty":5,"nm":"Trim Offset","np":3,"mn":"ADBE Angle Control","ix":5,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"3D","np":3,"mn":"ADBE Checkbox Control","ix":6,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Z Orientation","np":3,"mn":"ADBE Angle Control","ix":7,"en":1,"ef":[{"ty":0,"nm":"角度","mn":"ADBE Angle Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Straight Line Mode","np":3,"mn":"ADBE Checkbox Control","ix":8,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":true,"ix":1}}]},{"ty":5,"nm":"Rect Height","np":3,"mn":"ADBE Slider Control","ix":9,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner Roundness","np":3,"mn":"ADBE Slider Control","ix":10,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Arc Mode","np":3,"mn":"ADBE Checkbox Control","ix":11,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Reverse","np":3,"mn":"ADBE Checkbox Control","ix":12,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Size","np":3,"mn":"ADBE Slider Control","ix":13,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"---- Square Mode","np":3,"mn":"ADBE Checkbox Control","ix":14,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Horizontal","np":3,"mn":"ADBE Checkbox Control","ix":15,"en":1,"ef":[{"ty":7,"nm":"复选框","mn":"ADBE Checkbox Control-0001","ix":1,"v":{"a":0,"k":1,"ix":1}}]},{"ty":5,"nm":"Corner Proportion","np":3,"mn":"ADBE Slider Control","ix":16,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":50,"ix":1}}]},{"ty":5,"nm":"Corner 1 Lock","np":3,"mn":"ADBE Slider Control","ix":17,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Lock","np":3,"mn":"ADBE Slider Control","ix":18,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 1 Roundness","np":3,"mn":"ADBE Slider Control","ix":19,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]},{"ty":5,"nm":"Corner 2 Roundness","np":3,"mn":"ADBE Slider Control","ix":20,"en":1,"ef":[{"ty":0,"nm":"滑块","mn":"ADBE Slider Control-0001","ix":1,"v":{"a":0,"k":0,"ix":1}}]}],"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[100,100],"ix":2,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        var layerF = effect('From')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointC = toWorld(content('Line 1').transform.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointC[2] = 0;\n        var r = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointC[0], pixelAspect),\n            pointC[1],\n            pointC[2]\n        ]);\n        var h = $bm_mul(r, 2);\n        var w = h;\n    } else {\n        w = h = 0;\n    }\n    $bm_rt = [\n        w,\n        h\n    ];\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"rc","d":1,"s":{"a":0,"k":[100,0],"ix":2,"x":"var $bm_rt;\ntry {\n    var layerF = effect('From')(1);\n    var layerT = effect('To')(1);\n    var pointF = layerF.toWorld(layerF.anchorPoint);\n    var pointT = layerT.toWorld(layerT.anchorPoint);\n    var pixelAspect = thisComp.pixelAspect;\n    var squareMode = effect('---- Square Mode')(1).value;\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var threeDMode = effect('3D')(1).value;\n    if (squareMode) {\n        var distanceH = Math.abs($bm_sub(pointF[1], pointT[1]));\n        var distanceW = threeDMode ? length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[2]\n        ]) : $bm_mul(Math.abs($bm_sub(pointF[0], pointT[0])), pixelAspect);\n        if (!effect('Horizontal')(1).value) {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceW);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceW);\n            if (lengthLine2) {\n                distanceW = $bm_sub(distanceW, lengthLine2);\n            } else if (lengthLine1) {\n                distanceW = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceW = $bm_mul($bm_div(distanceW, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceW = $bm_sum(distanceW, Math.min(distanceW, $bm_div(distanceH, 2), content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceH,\n                distanceW\n            ];\n        } else {\n            var lengthLine1 = Math.min(Math.max(0, effect('Corner 1 Lock')(1).value), distanceH);\n            var lengthLine2 = Math.min(Math.max(0, effect('Corner 2 Lock')(1).value), distanceH);\n            if (lengthLine2) {\n                distanceH = $bm_sub(distanceH, lengthLine2);\n            } else if (lengthLine1) {\n                distanceH = lengthLine1;\n            } else {\n                var fltProp = $bm_div(Math.min(100, Math.max(0, effect('Corner Proportion')(1).value)), 100);\n                distanceH = $bm_mul($bm_div(distanceH, 2), $bm_div(fltProp, 0.5));\n            }\n            distanceH = $bm_sum(distanceH, Math.min($bm_div(distanceW, 2), distanceH, content('Line 1').content('Rect 1').roundness));\n            $bm_rt = [\n                distanceW,\n                distanceH\n            ];\n        }\n    } else if (arcMode) {\n        $bm_rt = [\n            0,\n            0\n        ];\n    } else {\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var rectHeight;\n        try {\n            rectHeight = effect('Rect Height')(1).value;\n        } catch ($e) {\n            rectHeight = value[1];\n        }\n        $bm_rt = [\n            distance,\n            Math.max(0.001, rectHeight)\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        0\n    ];\n}"},"p":{"a":0,"k":[0,0],"ix":3},"r":{"a":0,"k":0,"ix":4,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = effect('Corner Roundness')(1).value;\n    } else {\n        $bm_rt = effect('Corner 1 Roundness')(1).value;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"nm":"Rect 1","mn":"ADBE Vector Shape - Rect","hd":false},{"ty":"tm","s":{"a":0,"k":0,"ix":1,"x":"var $bm_rt;\ntry {\n    if (effect('---- Arc Mode')(1).value && !effect('---- Square Mode')(1).value) {\n        if (!effect('Reverse')(1).value) {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_div(180, Math.PI), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        } else {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').end);\n        }\n    } else {\n        $bm_rt = 0;\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"e":{"a":0,"k":100,"ix":2,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        var r = Math.min($bm_div(size[0], 2), $bm_div(size[1], 2), content('Line 1').content('Rect 1').roundness);\n        var P = $bm_sum($bm_mul(2, $bm_sub($bm_sum(size[0], size[1]), $bm_mul(4, r))), $bm_mul(4, $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)));\n        $bm_rt = $bm_mul($bm_div($bm_sum($bm_sub($bm_sum(size[1], $bm_div(size[0], 2)), $bm_mul(3, r)), $bm_mul($bm_mul($bm_mul(2, Math.PI), r), 90 / 360)), P), 100);\n    } else if (arcMode) {\n        if (!effect('Reverse')(1).value) {\n            $bm_rt = $bm_sub(100, content('Line 1').content('Trim 1').start);\n        } else {\n            var pointF = [\n                0,\n                0,\n                0\n            ];\n            var pointC = content('Line 1').transform.anchorPoint;\n            var degree = $bm_mul($bm_neg($bm_div(180, Math.PI)), Math.atan2($bm_sub(pointF[1], pointC[1]), $bm_sub(pointF[0], pointC[0])));\n            degree = $bm_mod(degree, 360);\n            if (degree < 0)\n                degree = $bm_sum(degree, 360);\n            var s = $bm_sub($bm_mul($bm_div(degree, 360), 100), 25);\n            $bm_rt = s;\n        }\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        if (size[1] > 0.001) {\n            $bm_rt = 100;\n        } else {\n            $bm_rt = 49.99;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":0,"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value && effect('---- Arc Mode')(1).value && effect('Reverse')(1).value) {\n        $bm_rt = -180.001;\n    } else {\n        $bm_rt = 0.001;\n    }\n} catch ($e) {\n}"},"m":1,"ix":3,"nm":"Trim 1","mn":"ADBE Vector Filter - Trim","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1,"x":"var $bm_rt;\ntry {\n    var arcMode = effect('---- Arc Mode')(1).value;\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (squareMode) {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            -size[1] / 2 + Math.min(size[0] / 2, size[1] / 2, content('Line 1').content('Rect 1').roundness)\n        ];\n    } else if (arcMode) {\n        var reverse = effect('Reverse')(1).value ? -1 : 1;\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var pixelAspect = thisComp.pixelAspect;\n        if (typeof pointF[2] == 'undefined')\n            pointF[2] = pointT[2] = 0;\n        var arcH = Math.min(3000, Math.max(-3000, effect('Size')(1)));\n        var arcHQ = $bm_div($bm_neg(arcH), 100);\n        var distance = length([\n            $bm_mul(pointF[0], pixelAspect),\n            pointF[1],\n            pointF[2]\n        ], [\n            $bm_mul(pointT[0], pixelAspect),\n            pointT[1],\n            pointT[2]\n        ]);\n        var r = $bm_div(distance, 2);\n        $bm_rt = [\n            r,\n            reverse * r * arcHQ\n        ];\n    } else {\n        var size = content('Line 1').content('Rect 1').size;\n        $bm_rt = [\n            size[0] / 2,\n            0\n        ];\n    }\n} catch ($e) {\n    $bm_rt = [\n        0,\n        0\n    ];\n}"},"s":{"a":0,"k":[100,100],"ix":3,"x":"var $bm_rt;\ntry {\n    if (!effect('---- Square Mode')(1).value) {\n        $bm_rt = [\n            100,\n            100\n        ];\n    } else {\n        var layerF = effect('From')(1);\n        var layerT = effect('To')(1);\n        var pointF = layerF.toWorld(layerF.anchorPoint);\n        var pointT = layerT.toWorld(layerT.anchorPoint);\n        var distanceW = $bm_sub(pointF[1], pointT[1]);\n        var distanceH = $bm_sub(pointF[0], pointT[0]);\n        var distanceD = 1;\n        if (typeof pointF[2] != 'undefined') {\n            $bm_rt = distanceD = $bm_neg($bm_sub(pointF[0], pointT[0]));\n        }\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = [\n                distanceW < 0 ? 100 : -100,\n                distanceD * distanceH < 0 ? 100 : -100\n            ];\n        } else {\n            $bm_rt = [\n                distanceD * distanceH < 0 ? 100 : -100,\n                distanceW < 0 ? -100 : 100\n            ];\n        }\n    }\n} catch ($e) {\n    $bm_rt = [\n        100,\n        100\n    ];\n}"},"r":{"a":0,"k":0,"ix":6,"x":"var $bm_rt;\ntry {\n    var squareMode = effect('---- Square Mode')(1).value;\n    if (!squareMode) {\n        $bm_rt = 180;\n    } else {\n        if (!effect('Horizontal')(1).value) {\n            $bm_rt = -90;\n        } else {\n            $bm_rt = 180;\n        }\n    }\n} catch ($e) {\n    $bm_rt = value;\n}"},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"变换"}],"nm":"Line 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"st","c":{"a":0,"k":[0.976470589638,0.270588248968,0.360784322023,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":2,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"nm":"Line Stroke","mn":"ADBE Vector Graphic - Stroke","hd":false}],"ip":0,"op":77,"st":0,"ct":1,"bm":0}],"markers":[],"props":{}}